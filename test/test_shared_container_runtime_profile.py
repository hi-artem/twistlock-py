# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.shared_container_runtime_profile import SharedContainerRuntimeProfile  # noqa: E501
from openapi_client.rest import ApiException

class TestSharedContainerRuntimeProfile(unittest.TestCase):
    """SharedContainerRuntimeProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SharedContainerRuntimeProfile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.shared_container_runtime_profile.SharedContainerRuntimeProfile()  # noqa: E501
        if include_optional :
            return SharedContainerRuntimeProfile(
                id = '', 
                account_ids = [
                    ''
                    ], 
                archived = True, 
                capabilities = openapi_client.models.runtime/container_capabilities.runtime.ContainerCapabilities(
                    ci = True, 
                    cloud_metadata = True, 
                    dns_cache = True, 
                    dynamic_dns_query = True, 
                    dynamic_file_creation = True, 
                    dynamic_process_creation = True, 
                    k8s = True, 
                    proxy = True, 
                    sshd = True, 
                    unpacker = True, ), 
                cluster = '', 
                collections = [
                    ''
                    ], 
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                entrypoint = '', 
                events = [
                    openapi_client.models.shared/container_history_event.shared.ContainerHistoryEvent(
                        _id = '', 
                        command = '', 
                        hostname = '', 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ], 
                filesystem = openapi_client.models.runtime/profile_filesystem.runtime.ProfileFilesystem(
                    behavioral = [
                        openapi_client.models.runtime/profile_filesystem_path.runtime.ProfileFilesystemPath(
                            mount = True, 
                            path = '', 
                            process = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    static = [
                        openapi_client.models.runtime/profile_filesystem_path.runtime.ProfileFilesystemPath(
                            mount = True, 
                            path = '', 
                            process = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ), 
                hash = 56, 
                host_network = True, 
                host_pid = True, 
                image = '', 
                image_id = '', 
                infra = True, 
                istio = True, 
                k8s = openapi_client.models.shared/profile_kubernetes_data.shared.ProfileKubernetesData(
                    cluster_roles = [
                        openapi_client.models.shared/kube_cluster_role.shared.KubeClusterRole(
                            labels = [
                                openapi_client.models.shared/kube_label.shared.KubeLabel(
                                    key = '', 
                                    value = '', )
                                ], 
                            name = '', 
                            role_binding = '', 
                            rules = [
                                openapi_client.models.shared/kube_policy_rule.shared.KubePolicyRule(
                                    api_groups = [
                                        ''
                                        ], 
                                    non_resource_urls = [
                                        ''
                                        ], 
                                    resource_names = [
                                        ''
                                        ], 
                                    resources = [
                                        ''
                                        ], 
                                    verbs = [
                                        ''
                                        ], )
                                ], )
                        ], 
                    roles = [
                        openapi_client.models.shared/kube_role.shared.KubeRole(
                            name = '', 
                            namespace = '', 
                            role_binding = '', )
                        ], 
                    service_account = '', ), 
                label = '', 
                last_update = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                learned_startup = True, 
                namespace = '', 
                network = openapi_client.models.runtime/profile_network.runtime.ProfileNetwork(
                    behavioral = openapi_client.models.runtime/profile_network_behavioral.runtime.ProfileNetworkBehavioral(
                        dns_queries = [
                            openapi_client.models.runtime/dns_query.runtime.DNSQuery(
                                domain_name = '', 
                                domain_type = '', )
                            ], 
                        listening_ports = [
                            openapi_client.models.runtime/app_listening_ports.runtime.AppListeningPorts(
                                app = '', 
                                ports_data = openapi_client.models.common/profile_port_data.common.ProfilePortData(
                                    all = True, 
                                    ports = [
                                        openapi_client.models.common/profile_port.common.ProfilePort(
                                            port = 56, 
                                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], ), )
                            ], 
                        outbound_ports = openapi_client.models.common/profile_port_data.common.ProfilePortData(
                            all = True, ), ), 
                    geoip = openapi_client.models.runtime/profile_network_geo_ip.runtime.ProfileNetworkGeoIP(
                        countries = [
                            openapi_client.models.runtime/geo_ip.runtime.GeoIP(
                                code = '', 
                                ip = '', 
                                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    static = openapi_client.models.runtime/profile_network_static.runtime.ProfileNetworkStatic(), ), 
                os = '', 
                processes = openapi_client.models.runtime/profile_processes.runtime.ProfileProcesses(
                    behavioral = [
                        openapi_client.models.runtime/profile_process.runtime.ProfileProcess(
                            command = '', 
                            md5 = '', 
                            modified = True, 
                            path = '', 
                            ppath = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            user = '', )
                        ], 
                    static = [
                        openapi_client.models.runtime/profile_process.runtime.ProfileProcess(
                            command = '', 
                            md5 = '', 
                            modified = True, 
                            path = '', 
                            ppath = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            user = '', )
                        ], ), 
                relearning_cause = '', 
                remaining_learning_duration_sec = 1.337, 
                state = '[\"learning\",\"dryRun\",\"learningExtended\",\"manualLearning\",\"manualRelearning\",\"active\",\"manualActive\"]'
            )
        else :
            return SharedContainerRuntimeProfile(
        )

    def testSharedContainerRuntimeProfile(self):
        """Test SharedContainerRuntimeProfile"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
