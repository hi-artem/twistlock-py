# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.types_vulnerability_stats import TypesVulnerabilityStats  # noqa: E501
from openapi_client.rest import ApiException

class TestTypesVulnerabilityStats(unittest.TestCase):
    """TypesVulnerabilityStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TypesVulnerabilityStats
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.types_vulnerability_stats.TypesVulnerabilityStats()  # noqa: E501
        if include_optional :
            return TypesVulnerabilityStats(
                id = '', 
                containers = openapi_client.models.types/resource_vulnerability_stats.types.ResourceVulnerabilityStats(
                    cves = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    impacted = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    vulnerabilities = [
                        openapi_client.models.types/vulnerability_info.types.VulnerabilityInfo(
                            cve = '', 
                            description = '', 
                            highest_risk_factors = openapi_client.models.types/risk_score_factors.types.RiskScoreFactors(
                                internet = True, 
                                network = True, 
                                no_security_profile = True, 
                                privileged_container = True, 
                                root_privilege = True, ), 
                            impacted_pkgs = [
                                ''
                                ], 
                            impacted_resources_cnt = 56, 
                            link = '', 
                            risk_factors = {
                                'key' : ''
                                }, 
                            risk_score = 1.337, 
                            status = '', )
                        ], ), 
                functions = openapi_client.models.types/resource_vulnerability_stats.types.ResourceVulnerabilityStats(
                    cves = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    impacted = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    vulnerabilities = [
                        openapi_client.models.types/vulnerability_info.types.VulnerabilityInfo(
                            cve = '', 
                            description = '', 
                            highest_risk_factors = openapi_client.models.types/risk_score_factors.types.RiskScoreFactors(
                                internet = True, 
                                network = True, 
                                no_security_profile = True, 
                                privileged_container = True, 
                                root_privilege = True, ), 
                            impacted_pkgs = [
                                ''
                                ], 
                            impacted_resources_cnt = 56, 
                            link = '', 
                            risk_factors = {
                                'key' : ''
                                }, 
                            risk_score = 1.337, 
                            status = '', )
                        ], ), 
                hosts = openapi_client.models.types/resource_vulnerability_stats.types.ResourceVulnerabilityStats(
                    cves = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    impacted = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    vulnerabilities = [
                        openapi_client.models.types/vulnerability_info.types.VulnerabilityInfo(
                            cve = '', 
                            description = '', 
                            highest_risk_factors = openapi_client.models.types/risk_score_factors.types.RiskScoreFactors(
                                internet = True, 
                                network = True, 
                                no_security_profile = True, 
                                privileged_container = True, 
                                root_privilege = True, ), 
                            impacted_pkgs = [
                                ''
                                ], 
                            impacted_resources_cnt = 56, 
                            link = '', 
                            risk_factors = {
                                'key' : ''
                                }, 
                            risk_score = 1.337, 
                            status = '', )
                        ], ), 
                images = openapi_client.models.types/resource_vulnerability_stats.types.ResourceVulnerabilityStats(
                    cves = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    impacted = openapi_client.models.vuln/distribution.vuln.Distribution(
                        critical = 56, 
                        high = 56, 
                        low = 56, 
                        medium = 56, 
                        total = 56, ), 
                    vulnerabilities = [
                        openapi_client.models.types/vulnerability_info.types.VulnerabilityInfo(
                            cve = '', 
                            description = '', 
                            highest_risk_factors = openapi_client.models.types/risk_score_factors.types.RiskScoreFactors(
                                internet = True, 
                                network = True, 
                                no_security_profile = True, 
                                privileged_container = True, 
                                root_privilege = True, ), 
                            impacted_pkgs = [
                                ''
                                ], 
                            impacted_resources_cnt = 56, 
                            link = '', 
                            risk_factors = {
                                'key' : ''
                                }, 
                            risk_score = 1.337, 
                            status = '', )
                        ], ), 
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return TypesVulnerabilityStats(
        )

    def testTypesVulnerabilityStats(self):
        """Test TypesVulnerabilityStats"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
