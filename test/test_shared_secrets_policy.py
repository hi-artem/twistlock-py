# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.shared_secrets_policy import SharedSecretsPolicy  # noqa: E501
from openapi_client.rest import ApiException

class TestSharedSecretsPolicy(unittest.TestCase):
    """SharedSecretsPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SharedSecretsPolicy
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.shared_secrets_policy.SharedSecretsPolicy()  # noqa: E501
        if include_optional :
            return SharedSecretsPolicy(
                id = '', 
                rules = [
                    openapi_client.models.shared/secrets_rule.shared.SecretsRule(
                        collections = [
                            openapi_client.models.collection/collection.collection.Collection(
                                account_ids = [
                                    ''
                                    ], 
                                app_ids = [
                                    ''
                                    ], 
                                clusters = [
                                    ''
                                    ], 
                                code_repos = [
                                    ''
                                    ], 
                                color = '', 
                                containers = [
                                    ''
                                    ], 
                                description = '', 
                                functions = [
                                    ''
                                    ], 
                                hosts = [
                                    ''
                                    ], 
                                images = [
                                    ''
                                    ], 
                                labels = [
                                    ''
                                    ], 
                                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                name = '', 
                                namespaces = [
                                    ''
                                    ], 
                                owner = '', 
                                prisma = True, 
                                system = True, )
                            ], 
                        disabled = True, 
                        injection = '[\"envvar\",\"filesystem\"]', 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        notes = '', 
                        owner = '', 
                        previous_name = '', 
                        read_all_perm = True, 
                        secrets = [
                            openapi_client.models.shared/vault_secret.shared.VaultSecret(
                                folder = '', 
                                key = '', 
                                name = '', 
                                safe = '', 
                                store = '', 
                                value = openapi_client.models.common/secret.common.Secret(
                                    encrypted = '', 
                                    plain = '', ), 
                                version = '', )
                            ], 
                        target_dir = '', )
                    ]
            )
        else :
            return SharedSecretsPolicy(
        )

    def testSharedSecretsPolicy(self):
        """Test SharedSecretsPolicy"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
