# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class WaasUnknownBotProtectionSpec(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'api_libraries': 'WaasEffect',
        'bot_impersonation': 'WaasEffect',
        'browser_impersonation': 'WaasEffect',
        'generic': 'WaasEffect',
        'http_libraries': 'WaasEffect',
        'request_anomalies': 'WaasRequestAnomalies',
        'web_automation_tools': 'WaasEffect',
        'web_scrapers': 'WaasEffect'
    }

    attribute_map = {
        'api_libraries': 'apiLibraries',
        'bot_impersonation': 'botImpersonation',
        'browser_impersonation': 'browserImpersonation',
        'generic': 'generic',
        'http_libraries': 'httpLibraries',
        'request_anomalies': 'requestAnomalies',
        'web_automation_tools': 'webAutomationTools',
        'web_scrapers': 'webScrapers'
    }

    def __init__(self, api_libraries=None, bot_impersonation=None, browser_impersonation=None, generic=None, http_libraries=None, request_anomalies=None, web_automation_tools=None, web_scrapers=None, local_vars_configuration=None):  # noqa: E501
        """WaasUnknownBotProtectionSpec - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._api_libraries = None
        self._bot_impersonation = None
        self._browser_impersonation = None
        self._generic = None
        self._http_libraries = None
        self._request_anomalies = None
        self._web_automation_tools = None
        self._web_scrapers = None
        self.discriminator = None

        if api_libraries is not None:
            self.api_libraries = api_libraries
        if bot_impersonation is not None:
            self.bot_impersonation = bot_impersonation
        if browser_impersonation is not None:
            self.browser_impersonation = browser_impersonation
        if generic is not None:
            self.generic = generic
        if http_libraries is not None:
            self.http_libraries = http_libraries
        if request_anomalies is not None:
            self.request_anomalies = request_anomalies
        if web_automation_tools is not None:
            self.web_automation_tools = web_automation_tools
        if web_scrapers is not None:
            self.web_scrapers = web_scrapers

    @property
    def api_libraries(self):
        """Gets the api_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The api_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._api_libraries

    @api_libraries.setter
    def api_libraries(self, api_libraries):
        """Sets the api_libraries of this WaasUnknownBotProtectionSpec.


        :param api_libraries: The api_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type api_libraries: WaasEffect
        """

        self._api_libraries = api_libraries

    @property
    def bot_impersonation(self):
        """Gets the bot_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The bot_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._bot_impersonation

    @bot_impersonation.setter
    def bot_impersonation(self, bot_impersonation):
        """Sets the bot_impersonation of this WaasUnknownBotProtectionSpec.


        :param bot_impersonation: The bot_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type bot_impersonation: WaasEffect
        """

        self._bot_impersonation = bot_impersonation

    @property
    def browser_impersonation(self):
        """Gets the browser_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The browser_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._browser_impersonation

    @browser_impersonation.setter
    def browser_impersonation(self, browser_impersonation):
        """Sets the browser_impersonation of this WaasUnknownBotProtectionSpec.


        :param browser_impersonation: The browser_impersonation of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type browser_impersonation: WaasEffect
        """

        self._browser_impersonation = browser_impersonation

    @property
    def generic(self):
        """Gets the generic of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The generic of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._generic

    @generic.setter
    def generic(self, generic):
        """Sets the generic of this WaasUnknownBotProtectionSpec.


        :param generic: The generic of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type generic: WaasEffect
        """

        self._generic = generic

    @property
    def http_libraries(self):
        """Gets the http_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The http_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._http_libraries

    @http_libraries.setter
    def http_libraries(self, http_libraries):
        """Sets the http_libraries of this WaasUnknownBotProtectionSpec.


        :param http_libraries: The http_libraries of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type http_libraries: WaasEffect
        """

        self._http_libraries = http_libraries

    @property
    def request_anomalies(self):
        """Gets the request_anomalies of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The request_anomalies of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasRequestAnomalies
        """
        return self._request_anomalies

    @request_anomalies.setter
    def request_anomalies(self, request_anomalies):
        """Sets the request_anomalies of this WaasUnknownBotProtectionSpec.


        :param request_anomalies: The request_anomalies of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type request_anomalies: WaasRequestAnomalies
        """

        self._request_anomalies = request_anomalies

    @property
    def web_automation_tools(self):
        """Gets the web_automation_tools of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The web_automation_tools of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._web_automation_tools

    @web_automation_tools.setter
    def web_automation_tools(self, web_automation_tools):
        """Sets the web_automation_tools of this WaasUnknownBotProtectionSpec.


        :param web_automation_tools: The web_automation_tools of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type web_automation_tools: WaasEffect
        """

        self._web_automation_tools = web_automation_tools

    @property
    def web_scrapers(self):
        """Gets the web_scrapers of this WaasUnknownBotProtectionSpec.  # noqa: E501


        :return: The web_scrapers of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :rtype: WaasEffect
        """
        return self._web_scrapers

    @web_scrapers.setter
    def web_scrapers(self, web_scrapers):
        """Sets the web_scrapers of this WaasUnknownBotProtectionSpec.


        :param web_scrapers: The web_scrapers of this WaasUnknownBotProtectionSpec.  # noqa: E501
        :type web_scrapers: WaasEffect
        """

        self._web_scrapers = web_scrapers

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WaasUnknownBotProtectionSpec):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, WaasUnknownBotProtectionSpec):
            return True

        return self.to_dict() != other.to_dict()
