# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class SharedFileDetails(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'md5': 'str',
        'path': 'str',
        'sha1': 'str',
        'sha256': 'str'
    }

    attribute_map = {
        'md5': 'md5',
        'path': 'path',
        'sha1': 'sha1',
        'sha256': 'sha256'
    }

    def __init__(self, md5=None, path=None, sha1=None, sha256=None, local_vars_configuration=None):  # noqa: E501
        """SharedFileDetails - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._md5 = None
        self._path = None
        self._sha1 = None
        self._sha256 = None
        self.discriminator = None

        if md5 is not None:
            self.md5 = md5
        if path is not None:
            self.path = path
        if sha1 is not None:
            self.sha1 = sha1
        if sha256 is not None:
            self.sha256 = sha256

    @property
    def md5(self):
        """Gets the md5 of this SharedFileDetails.  # noqa: E501

        Hash sum of the file using md5.   # noqa: E501

        :return: The md5 of this SharedFileDetails.  # noqa: E501
        :rtype: str
        """
        return self._md5

    @md5.setter
    def md5(self, md5):
        """Sets the md5 of this SharedFileDetails.

        Hash sum of the file using md5.   # noqa: E501

        :param md5: The md5 of this SharedFileDetails.  # noqa: E501
        :type md5: str
        """

        self._md5 = md5

    @property
    def path(self):
        """Gets the path of this SharedFileDetails.  # noqa: E501

        Path of the file.   # noqa: E501

        :return: The path of this SharedFileDetails.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SharedFileDetails.

        Path of the file.   # noqa: E501

        :param path: The path of this SharedFileDetails.  # noqa: E501
        :type path: str
        """

        self._path = path

    @property
    def sha1(self):
        """Gets the sha1 of this SharedFileDetails.  # noqa: E501

        Hash sum of the file using SHA-1.   # noqa: E501

        :return: The sha1 of this SharedFileDetails.  # noqa: E501
        :rtype: str
        """
        return self._sha1

    @sha1.setter
    def sha1(self, sha1):
        """Sets the sha1 of this SharedFileDetails.

        Hash sum of the file using SHA-1.   # noqa: E501

        :param sha1: The sha1 of this SharedFileDetails.  # noqa: E501
        :type sha1: str
        """

        self._sha1 = sha1

    @property
    def sha256(self):
        """Gets the sha256 of this SharedFileDetails.  # noqa: E501

        Hash sum of the file using SHA256.   # noqa: E501

        :return: The sha256 of this SharedFileDetails.  # noqa: E501
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this SharedFileDetails.

        Hash sum of the file using SHA256.   # noqa: E501

        :param sha256: The sha256 of this SharedFileDetails.  # noqa: E501
        :type sha256: str
        """

        self._sha256 = sha256

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedFileDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SharedFileDetails):
            return True

        return self.to_dict() != other.to_dict()
