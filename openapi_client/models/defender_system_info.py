# coding: utf-8

"""
    Prisma Cloud Compute API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 21.04.439
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class DefenderSystemInfo(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cpu_count': 'int',
        'free_disk_space_gb': 'int',
        'kernel_version': 'str',
        'memory_gb': 'float',
        'total_disk_space_gb': 'int'
    }

    attribute_map = {
        'cpu_count': 'cpuCount',
        'free_disk_space_gb': 'freeDiskSpaceGB',
        'kernel_version': 'kernelVersion',
        'memory_gb': 'memoryGB',
        'total_disk_space_gb': 'totalDiskSpaceGB'
    }

    def __init__(self, cpu_count=None, free_disk_space_gb=None, kernel_version=None, memory_gb=None, total_disk_space_gb=None, local_vars_configuration=None):  # noqa: E501
        """DefenderSystemInfo - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._cpu_count = None
        self._free_disk_space_gb = None
        self._kernel_version = None
        self._memory_gb = None
        self._total_disk_space_gb = None
        self.discriminator = None

        if cpu_count is not None:
            self.cpu_count = cpu_count
        if free_disk_space_gb is not None:
            self.free_disk_space_gb = free_disk_space_gb
        if kernel_version is not None:
            self.kernel_version = kernel_version
        if memory_gb is not None:
            self.memory_gb = memory_gb
        if total_disk_space_gb is not None:
            self.total_disk_space_gb = total_disk_space_gb

    @property
    def cpu_count(self):
        """Gets the cpu_count of this DefenderSystemInfo.  # noqa: E501

        CPU count on the host where Defender runs.   # noqa: E501

        :return: The cpu_count of this DefenderSystemInfo.  # noqa: E501
        :rtype: int
        """
        return self._cpu_count

    @cpu_count.setter
    def cpu_count(self, cpu_count):
        """Sets the cpu_count of this DefenderSystemInfo.

        CPU count on the host where Defender runs.   # noqa: E501

        :param cpu_count: The cpu_count of this DefenderSystemInfo.  # noqa: E501
        :type cpu_count: int
        """

        self._cpu_count = cpu_count

    @property
    def free_disk_space_gb(self):
        """Gets the free_disk_space_gb of this DefenderSystemInfo.  # noqa: E501

        Free disk space (in GB) on the host where Defender runs.   # noqa: E501

        :return: The free_disk_space_gb of this DefenderSystemInfo.  # noqa: E501
        :rtype: int
        """
        return self._free_disk_space_gb

    @free_disk_space_gb.setter
    def free_disk_space_gb(self, free_disk_space_gb):
        """Sets the free_disk_space_gb of this DefenderSystemInfo.

        Free disk space (in GB) on the host where Defender runs.   # noqa: E501

        :param free_disk_space_gb: The free_disk_space_gb of this DefenderSystemInfo.  # noqa: E501
        :type free_disk_space_gb: int
        """

        self._free_disk_space_gb = free_disk_space_gb

    @property
    def kernel_version(self):
        """Gets the kernel_version of this DefenderSystemInfo.  # noqa: E501

        Kernel version on the host where Defender runs.   # noqa: E501

        :return: The kernel_version of this DefenderSystemInfo.  # noqa: E501
        :rtype: str
        """
        return self._kernel_version

    @kernel_version.setter
    def kernel_version(self, kernel_version):
        """Sets the kernel_version of this DefenderSystemInfo.

        Kernel version on the host where Defender runs.   # noqa: E501

        :param kernel_version: The kernel_version of this DefenderSystemInfo.  # noqa: E501
        :type kernel_version: str
        """

        self._kernel_version = kernel_version

    @property
    def memory_gb(self):
        """Gets the memory_gb of this DefenderSystemInfo.  # noqa: E501

        Total memory (in GB) on the host where Defender runs.   # noqa: E501

        :return: The memory_gb of this DefenderSystemInfo.  # noqa: E501
        :rtype: float
        """
        return self._memory_gb

    @memory_gb.setter
    def memory_gb(self, memory_gb):
        """Sets the memory_gb of this DefenderSystemInfo.

        Total memory (in GB) on the host where Defender runs.   # noqa: E501

        :param memory_gb: The memory_gb of this DefenderSystemInfo.  # noqa: E501
        :type memory_gb: float
        """

        self._memory_gb = memory_gb

    @property
    def total_disk_space_gb(self):
        """Gets the total_disk_space_gb of this DefenderSystemInfo.  # noqa: E501

        Total disk space (in GB) on the host where Defender runs.   # noqa: E501

        :return: The total_disk_space_gb of this DefenderSystemInfo.  # noqa: E501
        :rtype: int
        """
        return self._total_disk_space_gb

    @total_disk_space_gb.setter
    def total_disk_space_gb(self, total_disk_space_gb):
        """Sets the total_disk_space_gb of this DefenderSystemInfo.

        Total disk space (in GB) on the host where Defender runs.   # noqa: E501

        :param total_disk_space_gb: The total_disk_space_gb of this DefenderSystemInfo.  # noqa: E501
        :type total_disk_space_gb: int
        """

        self._total_disk_space_gb = total_disk_space_gb

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DefenderSystemInfo):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DefenderSystemInfo):
            return True

        return self.to_dict() != other.to_dict()
